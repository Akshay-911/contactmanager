{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layouts/TextInput.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","concat","map","Provider","dispatch","setState","axios","get","then","response","data","value","this","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","name","email","phone","className","onClick","prevState","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","curson","defaultProps","protoTypes","PropTypes","string","isRequired","About","NotFound","TextInput","label","onChange","error","classnames","invalid","htmlFor","placeholder","func","AddContact","e","target","onSubmit","preventDefault","history","newContact","post","res","push","EditContact","updateContact","match","params","put","App","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b7c2c15d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        contacts: state.contacts.concat([action.payload]),\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response) =>\r\n      this.setState({\r\n        contacts: response.data,\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = (id, dispatch) => {\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then((response) => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, id } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card blue-grey darken-1\">\r\n              <div className=\"card-content white-text\">\r\n                <h4>\r\n                  {name}{\" \"}\r\n                  <i\r\n                    onClick={() =>\r\n                      this.setState((prevState) => ({\r\n                        showContactInfo: !prevState.showContactInfo,\r\n                      }))\r\n                    }\r\n                    className=\"fas fa-sort-down\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  ></i>\r\n                  <i\r\n                    className=\"fas fa-times\"\r\n                    style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  ></i>\r\n                  <Link to={`contact/edit/${id}`}>\r\n                    <i\r\n                      className=\"fas fa-pencil-alt\"\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        float: \"right\",\r\n                        color: \"black\",\r\n                        marginRight: \"1rem\",\r\n                      }}\r\n                    ></i>\r\n                  </Link>\r\n                </h4>\r\n                {showContactInfo && (\r\n                  <ul className=\"collection\">\r\n                    <li className=\"collection-item blue-grey darken-1\">\r\n                      {email}\r\n                    </li>\r\n                    <li className=\"collection-item blue-grey darken-1\">\r\n                      {phone}\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"center-align\">\r\n                <span className=\"blue-text text-darken-4\">Contact</span> List\r\n              </h1>\r\n              <div>\r\n                {contacts.map((contact) => (\r\n                  <Contact contact={contact} key={contact.id} />\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"nav-wrapper blue darken-4 mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a\r\n          href=\"/\"\r\n          className=\"brand-logo\"\r\n          style={{\r\n            curson: \"pointer\",\r\n          }}\r\n        >\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"right hide-on-med-and-down mr-auto\">\r\n            <li>\r\n              <Link to=\"/\">\r\n                <i className=\"fas fa-home\">Home</i>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/contact/add\">\r\n                <i className=\"fas fa-plus\">Add Contact</i>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\">\r\n                <i className=\"fas fa-question\">About</i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: \"Contact Manager\",\r\n};\r\n\r\nHeader.protoTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n\r\n      <p className=\"lead\">Sorry, This page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction TextInput(props) {\r\n  const { type, id, name, value, label, onChange, error } = props;\r\n\r\n  return (\r\n    <div className=\"input-field\">\r\n      <input\r\n        type={type}\r\n        className={classnames(\"validate\", {\r\n          invalid: error,\r\n        })}\r\n        id={id}\r\n        name={name}\r\n        onChange={onChange}\r\n      />\r\n      <label htmlFor={id}>{label}</label>\r\n      {error && <div className=\"helper-text\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInput.protoTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.error,\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInput from \"../layouts/TextInput\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    error: {},\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const { history } = this.props;\r\n\r\n    //check for errors\r\n    if (name === \"\") {\r\n      this.setState({ error: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ error: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ error: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/users\", newContact)\r\n      .then((res) => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      error: {},\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, error } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card my-auto\">\r\n              <h4 className=\"display-3\">Add Contact</h4>\r\n              <div className=\"card-content\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInput\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={error.name}\r\n                  />\r\n                  <TextInput\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={error.email}\r\n                  />\r\n                  <TextInput\r\n                    label=\"Phone Number\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={error.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block waves-effect waves-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInput from \"../layouts/TextInput\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    error: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    axios.get(`https://jsonplaceholder.typicode.com/users/${id}`).then((res) =>\r\n      this.setState({\r\n        name: res.data.name,\r\n        email: res.data.email,\r\n        phone: res.data.phone,\r\n      })\r\n    );\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const { history } = this.props;\r\n\r\n    //check for errors\r\n    if (name === \"\") {\r\n      this.setState({ error: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ error: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ error: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    axios\r\n      .put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact)\r\n      .then((res) => dispatch({ type: \"UPDATE_CONTACT\", payload: res.data }));\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      error: {},\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, error } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card my-auto\">\r\n              <h4 className=\"display-3\">Update Contact</h4>\r\n              <div className=\"card-content\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInput\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={error.name}\r\n                  />\r\n                  <TextInput\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={error.email}\r\n                  />\r\n                  <TextInput\r\n                    label=\"Phone Number\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={error.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block waves-effect waves-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"./context\";\n\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layouts/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"materialize-css/dist/js/materialize.min.js\";\nimport \"./App.css\";\n\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" render={() => <Contacts />}></Route>\n                <Route exact path=\"/contact/add\" component={AddContact}></Route>\n                <Route exact path=\"/about\" render={() => <About />}></Route>\n                <Route\n                  exact\n                  path=\"/contact/edit/:id\"\n                  component={EditContact}\n                ></Route>\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}